services:
  # Development Web App
  web-dev:
    build:
      context: .
      target: base
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/web/.next
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME:-United Dev Platform (Dev)}
      - NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION:-1.0.0-dev}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:3001}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL:-ws://localhost:3001}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING:-true}
    command: sh -c "cd apps/web && pnpm dev"
    networks:
      - udp-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

  # Development API
  api-dev:
    build:
      context: .
      target: base
      dockerfile: Dockerfile.dev
    ports:
      - '3001:3001'
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3001}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@postgres-dev:5433/udp_dev_db}
      - REDIS_URL=${REDIS_URL:-redis://redis-dev:6379}
      - DEBUG=${DEBUG:-true}
    command: sh -c "cd apps/api && pnpm dev"
    depends_on:
      - postgres-dev
      - redis-dev
    networks:
      - udp-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

  # Development Database
  postgres-dev:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-udp_dev_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    networks:
      - udp-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-udp_dev_db} -h localhost || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

  # Development Redis
  redis-dev:
    image: redis:7-alpine
    volumes:
      - redis_dev_data:/data
    ports:
      - '6380:6379'
    networks:
      - udp-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -h localhost ping | grep -q PONG || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  udp-dev-network:
    driver: bridge
