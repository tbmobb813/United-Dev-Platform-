name: CI - Pull Request

on:
    pull_request:
        types: [opened, synchronize, reopened]

permissions:
    contents: read
    issues: write

jobs:
    validate:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Enable Corepack & pnpm (early)
              run: |
                  corepack enable
                  corepack prepare pnpm@latest --activate

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: "pnpm"

            - name: Setup pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: Cache pnpm store
              uses: actions/cache@v4
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Lint
              run: pnpm -w lint

            - name: Typecheck
              run: pnpm -w type-check

            - name: Run critical tests
              run: pnpm test:critical

            - name: Run full tests
              run: pnpm test

    build-and-detect:
        runs-on: ubuntu-latest
        needs: validate
        if: ${{ always() }}
        steps:
            - uses: actions/checkout@v4

            - name: Enable Corepack & pnpm (early)
              run: |
                  corepack enable
                  corepack prepare pnpm@latest --activate

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: "pnpm"

            - name: Setup pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: Cache pnpm store
              uses: actions/cache@v4
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

            - name: Install dependencies
              # allow non-frozen install in this job so the detector can run
              # (temporary: prefer updating pnpm-lock.yaml in the repo long-term)
              run: pnpm install --no-frozen-lockfile

            - name: Build web (production, keep source-maps per next.config)
              run: pnpm --filter @udp/web build

            - name: Run duplicate-Yjs detector
              run: |
                  mkdir -p artifacts/duplicate-yjs
                  # Temporary allowlist: ignore the y-protocols/dist/sync.cjs resolvedSource
                  # (CI path observed in PR detector artifact). Remove once bundler fix is in place.
                  pnpm check:duplicate-yjs -- --dir apps/web/.next --report artifacts/duplicate-yjs/pr-report.json --allowlist /home/runner/work/United-Dev-Platform-/United-Dev-Platform-/node_modules/.pnpm/y-protocols@1.0.6_yjs@13.6.27/node_modules/y-protocols/dist/sync.cjs

            - name: Upload duplicate-Yjs report
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: duplicate-yjs-report
                  path: artifacts/duplicate-yjs/pr-report.json

            - name: read_report
              id: read_report
              if: always()
              env:
                  REPORT_PATH: artifacts/duplicate-yjs/pr-report.json
              run: |
                  node ./scripts/ci/read-duplicate-report.cjs

            - name: Post duplicate-Yjs summary as PR comment
              if: always()
              uses: peter-evans/create-or-update-comment@v3
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  issue-number: ${{ github.event.pull_request.number }}
                  body: |
                      **duplicate-Yjs detector report**

                      ${{ steps.read_report.outputs.summary }}
