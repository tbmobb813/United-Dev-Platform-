
echo "Pre-commit: lint-staged is disabled by default in this environment to avoid ESM/Path issues."
echo "To enable lint-staged on commit, set ENABLE_PRECOMMIT_LINT=1 in your shell before committing."

if [ "$ENABLE_PRECOMMIT_LINT" = "1" ]; then
	echo "ENABLE_PRECOMMIT_LINT=1 detected — attempting to run lint-staged."
	# Prefer running the local binary if it exists. This avoids dynamic ESM import
	# issues and doesn't require corepack/pnpm on the PATH.
	if [ -x "./node_modules/.bin/lint-staged" ]; then
		echo "Found local ./node_modules/.bin/lint-staged — running it."
		./node_modules/.bin/lint-staged
		exit_code=$?
		if [ $exit_code -eq 0 ]; then
			echo "lint-staged ran successfully (local binary)."
		else
			echo "lint-staged (local binary) exited with code $exit_code. Continuing commit but please check lint-staged locally." >&2
			true
		fi
	else
		echo "Local lint-staged binary not found, attempting programmatic Node import..."
		node -e "import('lint-staged').then(mod=>{ const run = mod.default || mod; return run(); }).catch(err=>{ console.error('lint-staged programmatic run failed:', err); process.exit(2); })"
		exit_code=$?
		if [ $exit_code -eq 0 ]; then
			echo "lint-staged ran successfully (programmatic import)."
		elif [ $exit_code -eq 2 ]; then
			echo "\nWarning: lint-staged could not be executed programmatically in this environment."
			echo "This may be due to an incompatible Node environment, missing dependencies, or a top-level-await ESM entrypoint."
			echo "To run the checks locally, install workspace dependencies (e.g., 'pnpm install' or 'corepack enable && pnpm install') and re-run the commit."
			echo "Continuing commit without running lint-staged..."
			true
		else
			echo "lint-staged exited with code $exit_code. Continuing commit but please check lint-staged locally." >&2
			true
		fi
	fi
else
	echo "Skipping lint-staged on commit (set ENABLE_PRECOMMIT_LINT=1 to enable)."
fi
